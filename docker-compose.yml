version: "3.1"
services:
  nginx:
    build: ./server/nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    links:
      - "php"
    volumes:
      - ./logs:/opt/logs
      - ./www:/opt/htdocs
      - ./config/nginx/conf.d:/etc/nginx/conf.d:rw
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf

  php:
    build: ./server/php
    container_name: php7
    ports:
      - "9000:9000"
    links:
      - "mysql"
      - "redis"
      # - "rabbitmq-management"
      # - "mongodb"
    volumes:
      - ./www/quclient:/home/q/php/quclient
      - ./config/php/php.ini:/usr/local/etc/php/php.ini
      - ./config/php/php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./www:/opt/htdocs
      - ./logs:/opt/logs
      - ./data:/data
  go:
    build: ./server/go
    ports:
      - 88:88
    volumes:
      - ./www/goproject:/go/src/project
  mysql:
    build: ./server/mysql
    container_name: mysql5.7
    ports:
      - "33036:3306"
    volumes:
      - ./config/mysql/mysql.cnf:/etc/mysql/mysql.cnf
      - ./config/mysql/mysqld.conf:/etc/mysql/mysql.conf.d
      - ./data/mysql:/var/lib/mysql
      - ./logs:/opt/logs
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    restart: always

  # php-nginx: 
  #   image: r.addops.soft.360.cn/dns-cache-ms/nginx-php:7.3
  #   ports: 
  #     - "8800:80"
  #   volumes:
  #     - ./www/dns/dns_cache_ms:/home/q/system/dns_cache_ms
  #     - ./server/dns_cache_ms/nginx.conf:/usr/local/nginx/conf/nginx.conf
  # php-xhgui: 
  #   image: r.addops.soft.360.cn/dns-cache-ms/php-xhgui:0.14.1
  #   ports:
  #     - "8801:80"  
  redis:
    build: ./server/redis
    ports:
      - "6379:6379"

  # rabbitmq-management:
  #   image: rabbitmq:management
  #   environment:
  #     RABBITMQ_DEFAULT_USER: guest
  #     RABBITMQ_DEFAULT_PASSWORD: guest
  #     RABBITMQ_DEFAULT_VHOST: /

  #     RABBITMQ_MANAGEMENT_SSL_VERIFY: verify_none
  #     RABBITMQ_MANAGEMENT_SSL_FAIL_IF_NO_PEER_CERT: "false"
  #   volumes:
  #     - ./tests/files/rootCA.pem:/rootCA.pem:ro
  #     - ./tests/files/rootCA.key:/rootCA.key:ro
  #   ports:
  #     - 15671:15671
  #     - 15672:15672
  #     - 5671:5671
  #     - 5672:5672
  # mongodb:
  #   image: mongo
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - ~/mongodata:/data/db
  # myzipkin:
  #   container_name: myzipkin
  #   image: openzipkin/zipkin
  #   ports:
  #     - "9411:9411"
  #   environment: 
  #     STORAGE_TYPE: mysql 
  #     MYSQL_HOST: mysql 
  #     MYSQL_TCP_PORT: 3306 
  #     MYSQL_USER: root 
  #     MYSQL_PASS: 123456 
  #     MYSQL_DB: zipkin


  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
      
  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # elk:
  #   image: sebp/elk
  #   container_name: elk
  #   volumes:
  #     - ./logs/elasticsearch:/opt/elasticsearch/logs
  #     - ./config/elk/kibana.yml:/opt/kibana/config/kibana.yml
  #   ports:
  #     - "5601:5601"
  #     - "9200:9200"
  #     - "5044:5044"
  # filebeat:
  #   image: docker.elastic.co/beats/filebeat:7.3.1
  #   volumes:
  #     - ./logs:/opt/logs
  #     - ./config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
  #     - ./config/filebeat/modules.d:/usr/share/filebeat/modules.d
  #   links:
  #     - elk
  #   environment:
  #     KIBANA_HOST: "elk:5601"
  #     ELASTICSEARCH_HOSTS: "elk:9200"
  #     ELASTICSEARCH_USERNAME: ""
  #     ELASTICSEARCH_PASSWORD: ""
  # canal:
  #   image: canal/canal-server
  #   ports:
  #     - 2222:2222
  #     - 8000:8000
  #     - 11111:11111
  #     - 11112:11112
  #   links:
  #     - mysql
  #   environment:
  #     canal.destinations: 'test'
  #     canal.instance.master.address: 'mysql:3306'
  #     canal.instance.dbUsername: 'canal'
  #     canal.instance.dbPassword: 'canal'
  #     canal.instance.connectionCharset: 'UTF-8'
  #     canal.instance.tsdb.enable: 'true'
  #     canal.instance.gtidon: 'false'
